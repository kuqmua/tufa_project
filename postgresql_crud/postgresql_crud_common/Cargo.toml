[package]
name = "postgresql_crud_common"
version = "0.1.0"
edition = "2024"

[dependencies]
# strum_macros = {version = "=0.24.3"}
# futures = {version = "=0.3.28"}
# uuid = {version = "=1.10.0", features = ["serde", "v4"]}
# utoipa = {version = "=4.1.0", features = ["axum_extras"]}
# sqlx = {version = "=0.8.5", features = ["postgres", "uuid", "bigdecimal", "rust_decimal", "chrono", "time", "bit-vec", "runtime-tokio", "ipnetwork", "mac_address", "bit-vec", "json"]}
# serde = {version = "=1.0", features = ["derive"]}
# num-bigint = {version = "=0.4.4"}
# thiserror = {version = "=1.0.48"}
# schemars = {version = "=0.8.22"}
# regex = {version = "=1.9.3"}
# error_occurence_lib = {path = "../error_occurence_lib"}
# from_str = {path = "../from_str"}
# postgresql_crud_common = {path = "./postgresql_crud_common"}
# generate_postgresql_crud = {path = "./generate_postgresql_crud"}
# generate_postgresql_json_object_type = {path = "./postgresql_json_object_type/generate_postgresql_json_object_type"}
# generate_postgresql_json_types = {path = "./postgresql_json_types/generate_postgresql_json_types"}
# generate_where_element_filters = {path = "./where_element_filters/generate_where_element_filters"}
# generate_postgresql_types = {path = "./postgresql_types/generate_postgresql_types"}
# postgresql_json_object_type = {path = "./postgresql_json_object_type"}
# postgresql_json_types = {path = "./postgresql_json_types"}
# postgresql_types = {path = "./postgresql_types"}
# where_element_filters = {path = "./where_element_filters"}
# app_state = {path = "../app_state"}
# http_logic = {path = "../http_logic"}
# naming = {path = "../naming"}
# route_validators = {path = "../route_validators"}