[package]
authors = ["sergey shmakov <tyfaproject@gmail.com>"] 
edition = "2021" #maybe cant compile but switch from 2018 to 2021
name = "tufa_server" 
version = "0.1.0" 

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "tufa_server"
path = "src/main.rs"

[dependencies]
axum = {version = "=0.7.2", features = ["macros"]}
tower = {version = "=0.4.13"}
tower-http = {version = "=0.5.0", features = ["trace", "fs", "cors"]}
argon2 = {version = "=0.4.0", features = ["std"]}
base64 = {version = "=0.21.0"}
bytes = {version = "=1.2.1"}
chrono = {version = "=0.4"}
config = {version = "=0.13.3"}
convert_case = {version = "=0.6.0"}
dotenv = {version = "=0.15.0"}
env_logger = {version = "=0.10.0"}
futures = {version = "=0.3.28"}
hex = {version = "=0.4"}
hmac = {version = "=0.12", features = ["std"]}
html_parser = {version ="=0.6.2" }
htmlescape = {version = "=0.3"}
http = {version = "=0.2.9"}
itertools = {version = "=0.10.1"}
# mongodb = {version = "=2.0.1"}
num_cpus = {version = "=1.15.0"}
quickcheck = {version = "=1.0.3"}
quickcheck_macros = {version = "=1.0.0"}
rand = {version = "=0.8", features = ["std_rng"]}
regex = {version = "=1.9.3"}
reqwest = {version = "=0.11.17", default-features = false, features = ["json", "blocking", "rustls-tls", "cookies", "gzip", "brotli", "deflate", "trust-dns", "native-tls", "multipart", "stream", "cookies"]}
secrecy = {version = "=0.8", features = ["serde"]}
serde = {version = "=1.0", features = ["derive"]}
serde-aux = {version = "=4.0.0"}
serde-xml-rs = {version = "=0.6.0"}
serde_derive = {version = "=1.0"}
serde_json = {version = "=1.0"}
serde_urlencoded = {version = "=0.7.1"}
sha2 = {version = "=0.10"}
sqlx = {version = "=0.7.1", features = ["postgres", "uuid", "runtime-tokio"]}
strum = {version = "=0.24.1"}
strum_macros = {version = "=0.24.3"}
thiserror = {version = "=1.0.48"}
time = {version = "=0.3.23"}
tokio = {version = "=1.29.1", features = ["macros", "rt-multi-thread"]}
toml = {version = "=0.5"}
tracing = {version = "=0.1", features = ["log", "valuable"]}
tracing-actix-web = {version = "=0.7.2"}
tracing-bunyan-formatter = {version = "=0.3"}
tracing-log = {version = "=0.1"}
tracing-subscriber = {version = "=0.3", features = ["registry", "env-filter"]}
unicode-segmentation = {version = "=1"}
urlencoding = {version = "=2"}
uuid = {version = "=0.8", features = ["v4", "serde"]}
futures-util = {version = "=0.3.28"}
# uuid = {version = "1.2.2", features = ["v4", "serde"]}
validator = {version = "=0.16.0"}
valuable = {version = "=0.1.0", features = ["default", "std", "alloc", "derive", "valuable-derive"]}#maybe not all features needed
utoipa = {version = "=4.1.0", features = ["axum_extras"]}
utoipa-swagger-ui = {version = "=5.0.0", features=["axum"]}
#
# tufa_common = {git = "https://github.com/kuqmua/tufa_common"}# git version
tufa_common = {path = "../tufa_common"}# local dev test without commits version
#prod
# enum_extension = {git = "https://github.com/kuqmua/enum_extension"}
#dev
compile_time_git_info = {path = "../compile_time_git_info"}
enum_extension = {path = "../enum_extension"}
error_occurence = {path = "../error_occurence"}
error_occurence_lib = {path = "../error_occurence_lib"}
generate_getter_traits_for_struct_fields = {path = "../generate_getter_traits_for_struct_fields"}
tufa_postgresql_crud = {path = "../tufa_postgresql_crud"}
init_from_env = {path = "../init_from_env"}
user_port_try_from_u16 = {path = "../user_port_try_from_u16"}
#
# async-std = "1.10.0"
# displaydoc = "0.2.3"
# roux = "1.3.10" #reddit. worked with 0.4.0 version
#egg-mode = "0.15.0"//twitter
#google-youtube3 = "1.0.13+20200402" - do not saw openssl, under linux its all good
# quick-xml = "0.18.1"
# log = "0.4"
# simplelog = "0.9"
# tokio = {version = "=1.29.1", features = ["macros", "rt-multi-thread"]}
# tokio-compat = "0.1.6"
# crossbeam = "0.8.0"
# async-std = "1.9.0"#remove later its only for example
# threadpool = "1.0"
# RustyXML = "0.3.0"
# xml-rs = "0.8" 
# xmlparser = "0.13.2" 
#google-youtube3-cli = "1.0.13+20200402" comand line interface as variant or just can use source code
# strum = { version = "=0.24.1", features = ["derive"] }#for enum into string
#tutorial from https://blog.logrocket.com/configuration-management-in-rust-web-services/
# warp = "0.2"
#tutorial from https://blog.logrocket.com/configuration-management-in-rust-web-services/

[dev-dependencies]
# claim = {version = "=0.5"}
fake = {version = "=2.3"}
linkify = {version = "=0.8"}
reqwest = {version = "=0.11"}
serde_json = {version = "=1"}
serde_urlencoded = {version = "=0.7.1"}
tokio = {version = "=1.29.1", features = ["rt", "macros", "rt-multi-thread"]}
wiremock = {version = "=0.5.2"}

# ###########################
# # custom linker dependencies
# # from https://www.lpalmieri.com/posts/session-based-authentication-in-rust/l

# # On Windows 
# # ```
# # cargo install -f cargo-binutils
# # rustup component add llvm-tools-preview
# # ```
# [target.x86_64-pc-windows-msvc]
# rustflags = ["-C", "link-arg=-fuse-ld=lld"]

# [target.x86_64-pc-windows-gnu]
# rustflags = ["-C", "link-arg=-fuse-ld=lld"]

# # On Linux:
# # - Ubuntu, `sudo apt-get install lld clang`
# # - Arch, `sudo pacman -S lld clang`
# [target.x86_64-unknown-linux-gnu]
# rustflags = ["-C", "linker=clang", "-C", "link-arg=-fuse-ld=lld"]

# # On MacOS, `brew install michaeleisel/zld/zld`
# [target.x86_64-apple-darwin]
# rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/zld"]

# [target.aarch64-apple-darwin]
# rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/zld"]

# cargo run-script *script name*
[package.metadata.scripts]
restart_docker_compose = "sudo docker-compose down && docker-compose up -d"

[lints]
workspace = true
